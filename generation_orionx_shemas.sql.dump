-- Проверка результатов
-- SELECT CUUID, CName, CText1, CConcept FROM dde_ConceptX WHERE CConcept = 2400 AND (CName = 'address'
--                                       OR CName = 'version' OR CName = 'd_index' OR CName = 'description'
--                                       OR CName = 'priority' OR CName = 'contactId_zone' OR CName = 'time_window');
-- SELECT dde_ConceptX.CUUID from dde_ConceptX WHERE CConcept IN (SELECT CFConceptExt FROM dde_ConfigX WHERE CFConceptExt >= 5000 AND CFConceptExt < 50000);
-- SELECT CFConceptExt FROM dde_ConfigX WHERE CFConceptExt > 5000 AND CFConcept < 50000;
SELECT count(cuuid) FROM dde_conceptx WHERE cconcept = 3600;
SELECT dde_conceptx.cuuid FROM dde_conceptx WHERE cconcept = 2600 AND cname = 'Не управлять'
-- IF (SELECT count(dde_SetX.SUUID) FROM dde_SetX WHERE SConcept = 2000400 AND SOwner = '00000000-0000-0000-0000-000000005101') <= 0
--     print 'not exists';
SELECT distinct sconcept FROM dde_setx;
SELECT EntEvName, EntrName, EntrVersion FROM [export_enters_events] WHERE EntrName= 'Фантом-10'

SELECT distinct dstx.sconcept, dde_configx.cfname FROM dde_setx dstx INNER JOIN dde_configx ON dstx.sconcept = dde_configx.cfconceptext ORDER BY sconcept;
SELECT ReaderEvName, ReaderName, ReaderVersion FROM [export_reader_events] WHERE ReaderName= 'Считыватель' ORDER BY ReaderEvName;
SELECT * FROM [export_enters_events] WHERE EntrName= 'FMW-3/2 PC';
GO
/*
    1. генерация наборов параметров для приборов, индентификаторами являются значения CName из ConceptX
    2. генерация наборов входов
    + TODO: сгенерировать 144 набора для всех типов входов
    + TODO: сгенерировать концепт "Тактики"
    + TODO: сгенерировать набор для типов входов
    + TODO: сгенерировать наборы приборов со входами (условие количества входов - тип прибора), дефолтный тип входа - у каждого прибора свой
    + TODO: сгенерировать наборы приборов с выходами (разница в типах выходов)
    + TODO: сгенерировать наборы считывателей (уточнить ТИП считывателя)
    TODO: проверка на наличие записей наборов (типов входов, типов выходов, считывателей, типов приборов), каждый запуск должен только добавлять из ConceptX
    TODO: сделать генерацию наборов входов, выходов, считывателей процедурой на вход процедура принимает концепты наборов и концепты типов

    -- тактика - отдельный концепт
    -- задержка управления реле (relay_control_delay), время управления реле(relay_control_time) (выход): тип float, значение кратно 0,125 мс, в АБД значения округляются
 */

/* задаем общие переменные генерации */
-- DELETE FROM dde_SetX WHERE SConcept = 20000100
-- DELETE FROM dde_SetX WHERE SConcept = 20000600
-- DELETE FROM dde_SetX WHERE SConcept = 20000700
-- DELETE FROM dde_SetX WHERE SConcept = 2000200
-- DELETE FROM dde_SetX WHERE SConcept = 2000300
-- DELETE FROM dde_SetX WHERE SConcept = 20002100
-- DELETE FROM dde_SetX WHERE SConcept = 20002200

/* для каждого этапа флаг записи, записывается по условию */
DECLARE @insertable bit = 1;

DECLARE @CUUID1 uniqueidentifier;
DECLARE @CUUID2 uniqueidentifier;
DECLARE @CUUID3 uniqueidentifier = NULL;
DECLARE @CName nvarchar(MAX);
DECLARE @CText1 nvarchar(MAX);

/* Генерация концепта Тактики (2800) */
-- INSERT INTO dde_ConfigX(CFUUID, CFConcept, CFConceptExt, CFName) VALUES ('00000000-0000-0000-0000-000000002800', 1, 2800, 'Тактики');

DECLARE @Concept_enters_params bigint = 2500; -- концепт для набора входов прибора, по умолчанию - охранный
DECLARE @Concept_enters bigint = 3600; -- концепт для набора входов прибора, по умолчанию - охранный

DECLARE @Concept_reader_params bigint       = 2700; -- концепт для набора входов прибора, по умолчанию - охранный
DECLARE @SConcept_EntersParams_sets bigint  = 20000600;
DECLARE @SConcept_RelayParams_sets bigint   = 20000700;
DECLARE @SConcept_ReadersParams_sets bigint = 20000800;
DECLARE @SConcept_DevicesParams_sets bigint = 20000400;
DECLARE @SConcept_EventsDevice_sets bigint  = 20000900;

-- ГЕНЕРАЦИЯ ТИПОВ ВХОДА (3600) --
DECLARE enters_cursor cursor FOR SELECT cuuid, cname, ctext1 FROM dde_conceptx WHERE cconcept = @Concept_enters;
DECLARE @CUUID_enter_type_owner uniqueidentifier;
DECLARE @EnterName nvarchar(MAX)
OPEN enters_cursor;
FETCH NEXT FROM enters_cursor INTO @CUUID_enter_type_owner, @EnterName, @CText1;
WHILE @@FETCH_STATUS = 0
    BEGIN
       --ГЕНЕРАЦИЯ  НАБОРА ПАРАМЕТРОВ ДЛЯ КАЖДОГО ТИПА ВХОДА --
        DECLARE params_cursor cursor FOR SELECT cuuid, cname, ctext1 FROM dde_conceptx WHERE cconcept = @Concept_enters_params
        OPEN params_cursor;
        FETCH NEXT FROM params_cursor INTO @CUUID1, @CName, @CText1;
        WHILE @@FETCH_STATUS = 0
            BEGIN
                IF @CName = 'device_address' OR @CName = 'number' OR @CName = 'user_number' OR @CName = 'contactId_zone'
                    BEGIN
                        SET @CUUID2 = (SELECT dde_conceptx.cuuid FROM dde_conceptx WHERE cconcept = 2000 AND cname = 'int');
                    --print @CUUID2;
                    END
                IF @CName = 'name' OR @CName = 'description' OR @CName = 'type'
                    BEGIN
                        SET @CUUID2 = (SELECT dde_conceptx.cuuid FROM dde_conceptx WHERE cconcept = 2000 AND cname = 'nvarchar');
                    END
                 IF @CName = 'statistic_summary' OR @CName = 'zone_day'
                    BEGIN
                        SET @CUUID2 = (SELECT dde_conceptx.cuuid FROM dde_conceptx WHERE cconcept = 2000 AND cname = 'bool');
                    END
               -- IF (SELECT count(dde_SetX.SUUID) FROM dde_SetX WHERE SConcept = 2000600 AND  SOwner = @CUUID_enter_type_owner) <= 0
                IF(@insertable = 1)
                    INSERT INTO dde_setx (suuid, sconcept, sowner, sname, suuid1, SUUID2, SUUID3, SInt1, SText1)
                        VALUES (NEWID(), @SConcept_EntersParams_sets, @CUUID_enter_type_owner, @CName, @CUUID1, @CUUID2, NULL, NULL, @CText1);

                --print @CUUID1;
            FETCH NEXT FROM params_cursor INTO @CUUID1, @CName, @CText1;
            END
            close params_cursor;
            DEALLOCATE params_cursor;

       /* ГЕНЕРАЦИЯ НАБОРОВ СОБЫТИЙ Входов */
       IF(@insertable = 1)
        exec insert_exports export_enters_events, @EnterName, 20002100, @CUUID_enter_type_owner, 4000, 'EntEvName', 'EntrName', 'EntrVersion';
       FETCH NEXT FROM enters_cursor INTO @CUUID_enter_type_owner, @EnterName, @CText1;
   END
CLOSE enters_cursor;
deallocate enters_cursor;

-- ГЕНЕРАЦИЯ ТИПОВ Считывателя (3800) --
DECLARE @Concept_readers bigint = 3800; -- концепт cчитывателя
DECLARE enters_cursor cursor FOR SELECT cuuid, cname, ctext1 FROM dde_conceptx WHERE cconcept = @Concept_readers;
DECLARE @CUUID_reader_type_owner uniqueidentifier;
DECLARE @ReaderName nvarchar(MAX);
OPEN enters_cursor;
FETCH NEXT FROM enters_cursor INTO @CUUID_reader_type_owner, @ReaderName, @CText1;
WHILE @@FETCH_STATUS = 0
    BEGIN
       --ГЕНЕРАЦИЯ  НАБОРА ПАРАМЕТРОВ ДЛЯ КАЖДОГО ТИПА ВХОДА --
        DECLARE params_cursor cursor FOR SELECT cuuid, cname, ctext1 FROM dde_conceptx WHERE cconcept = @Concept_reader_params
        OPEN params_cursor;
        FETCH NEXT FROM params_cursor INTO @CUUID1, @CName, @CText1;
        WHILE @@FETCH_STATUS = 0
            BEGIN
                IF @CName = 'device_address' OR @CName = 'number' OR @CName = 'user_number' OR @CName = 'contactId_zone'
                    BEGIN
                        SET @CUUID2 = (SELECT dde_conceptx.cuuid FROM dde_conceptx WHERE cconcept = 2000 AND cname = 'int');
                    --print @CUUID2;
                    END
                IF @CName = 'name' OR @CName = 'description' OR @CName = 'type'
                    BEGIN
                        SET @CUUID2 = (SELECT dde_conceptx.cuuid FROM dde_conceptx WHERE cconcept = 2000 AND cname = 'nvarchar');
                    END
                 IF @CName = 'all_zones' OR @CName = 'all_group_zones'
                    BEGIN
                        SET @CUUID2 = (SELECT dde_conceptx.cuuid FROM dde_conceptx WHERE cconcept = 2000 AND cname = 'bool');
                    END
               -- IF (SELECT count(dde_SetX.SUUID) FROM dde_SetX WHERE SConcept = 2000600 AND  SOwner = @CUUID_enter_type_owner) <= 0
                IF(@insertable = 1)
                    INSERT INTO dde_setx (suuid, sconcept, sowner, sname, suuid1, SUUID2, SUUID3, SInt1, SText1)
                        VALUES (NEWID(), @SConcept_ReadersParams_sets, @CUUID_reader_type_owner, @CName, @CUUID1, @CUUID2, NULL, NULL, @CText1);

                --print @CUUID1;
            FETCH NEXT FROM params_cursor INTO @CUUID1, @CName, @CText1;
            END
            close params_cursor;
            DEALLOCATE params_cursor;
       /* ГЕНЕРАЦИЯ НАБОРОВ СОБЫТИЙ Считывателей */
       IF(@insertable = 1)
        exec insert_exports export_reader_events, @ReaderName, 20002300, @CUUID_reader_type_owner, 4000, 'ReaderEvName', 'ReaderName', 'ReaderVersion';
       FETCH NEXT FROM enters_cursor INTO @CUUID_reader_type_owner, @ReaderName, @CText1;
   END
CLOSE enters_cursor;
deallocate enters_cursor;


-- ГЕНЕРАЦИЯ ТИПОВ ВЫХОДОВ (3700) --
SET @Concept_enters = 3700;
SET @Concept_enters_params = 2600;
DECLARE enters_cursor cursor FOR SELECT cuuid, cname, ctext1 FROM dde_conceptx WHERE cconcept = @Concept_enters;
--DECLARE @CUUID_enter_type_owner uniqueidentifier;
DECLARE @RelayName nvarchar(MAX)
OPEN enters_cursor;
FETCH NEXT FROM enters_cursor INTO @CUUID_enter_type_owner, @RelayName, @CText1;
WHILE @@FETCH_STATUS = 0
    BEGIN
        --ГЕНЕРАЦИЯ  НАБОРА ПАРАМЕТРОВ ДЛЯ КАЖДОГО ТИПА ВЫХОДА --
        DECLARE params_cursor cursor FOR SELECT cuuid, cname, ctext1 FROM dde_conceptx WHERE cconcept = @Concept_enters_params
        OPEN params_cursor;
        FETCH NEXT FROM params_cursor INTO @CUUID1, @CName, @CText1;
        WHILE @@FETCH_STATUS = 0
            BEGIN
                IF @CName = 'device_address' OR @CName = 'number' OR @CName = 'user_number' OR @CName = 'contactId_zone'
                    BEGIN
                        SET @CUUID2 = (SELECT dde_conceptx.cuuid FROM dde_conceptx WHERE cconcept = 2000 AND cname = 'int');
                    --print @CUUID2;
                    END
                IF @CName = 'name' OR @CName = 'description' OR @CName = 'type'
                    BEGIN
                        SET @CUUID2 = (SELECT dde_conceptx.cuuid FROM dde_conceptx WHERE cconcept = 2000 AND cname = 'nvarchar');
                    END
                 IF @CName = 'central_control_tactic' OR @CName = 'zone_day'
                    BEGIN
                        SET @CUUID2 = (SELECT dde_conceptx.cuuid FROM dde_conceptx WHERE cconcept = 2000 AND cname = 'bool');
                    END
                IF @CName = 'relay_control_delay' OR @CName = 'relay_control_time'
                    BEGIN
                        SET @CUUID2 = (SELECT dde_conceptx.cuuid FROM dde_conceptx WHERE cconcept = 2000 AND cname = 'float');
                    END
                IF @CName = 'tactic'
                    BEGIN
                         SET @CUUID2 = (SELECT dde_conceptx.cuuid FROM dde_conceptx WHERE cconcept = 2000 AND cname = 'nvarchar');
                         SET @CUUID3 = (SELECT dde_conceptx.cuuid FROM dde_conceptx WHERE cconcept = 2800 AND cname = 'Не управлять');
                    END
               -- IF (SELECT count(dde_SetX.SUUID) FROM dde_SetX WHERE SConcept = 2000600 AND  SOwner = @CUUID_enter_type_owner) <= 0
                IF(@insertable = 1)
                    INSERT INTO dde_setx (suuid, sconcept, sowner, sname, suuid1, SUUID2, SUUID3, SInt1, SText1)
                        VALUES (NEWID(), @SConcept_RelayParams_sets, @CUUID_enter_type_owner, @CName, @CUUID1, @CUUID2, @CUUID3, NULL, @CText1);
                SET @CUUID3 = NULL;
                --print @CUUID1;
            FETCH NEXT FROM params_cursor INTO @CUUID1, @CName, @CText1;
            END
            close params_cursor;
            DEALLOCATE params_cursor;
        /* ГЕНЕРАЦИЯ НАБОРОВ СОБЫТИЙ Выходов */
        IF(@insertable = 1)
        exec insert_exports export_relays_events, @RelayName, 20002200, @CUUID_enter_type_owner, 4000, 'RelEvName', 'RelName', 'RelVersion';
       FETCH NEXT FROM enters_cursor INTO @CUUID_enter_type_owner, @RelayName, @CText1;
    END
CLOSE enters_cursor;
deallocate enters_cursor;


-- ГЕНЕРАЦИЯ ТИПОВ ПРИБОРОВ --
DECLARE @CUUID_device_owner uniqueidentifier;
DECLARE @CDeviceName nvarchar(MAX);
DECLARE @CConcept_device bigint;
DECLARE @Concept_device_params bigint = 2400; -- концепт для набора параметров прибора
DECLARE cuuid_cursor cursor FOR SELECT cuuid, cconcept, cname FROM dde_conceptx WHERE cconcept IN (SELECT cfconceptext FROM dde_configx WHERE cfconceptext BETWEEN 5000 AND 50000);

OPEN cuuid_cursor;
FETCH NEXT FROM cuuid_cursor INTO @CUUID_device_owner, @CConcept_device, @CDeviceName;
WHILE @@FETCH_STATUS = 0
   BEGIN
        /* ГЕНЕРАЦИЯ  НАБОРА ПАРАМЕТРОВ В ЗАВИСИМОСТИ ОТ ТИПА ПРИБОРА */
        -- набор параметров в зависимости от типа прибора, надо придумать условие:
        -- если CConcept = 10000, то ВСЕ + включаем параметр окно_времени
             -- если CConcept = 15000, то ВСЕ + включаем параметр окно_времени + параметр группы_доступа
        -- если CConcept = 13000 или 23000 или ..., то ВСЕ + включаем параметр трансляция
        -- если CConcept = 80000, то ВСЕ + включаем параметр подключенные_кпб
   DECLARE params_cursor cursor FOR SELECT cuuid, cname, ctext1 FROM dde_conceptx WHERE cconcept = @Concept_device_params AND (
            cname = 'address' OR cname = 'name'
            OR cname = 'version' OR cname = 'd_index' OR cname = 'description'
            OR cname = 'priority' OR cname = 'contactId_zone'
                OR cname =
                     CASE
                         WHEN @CConcept_device = 10000 THEN 'time_window'
                         WHEN @CConcept_device = 15000 THEN 'access_groups'
                         WHEN     @CConcept_device = 13000
                                 OR @CConcept_device = 11000
                                 OR @CConcept_device = 20000
                                 OR @CConcept_device = 22000
                                 OR @CConcept_device = 23000
                         THEN 'broadcasting'
                     END
                OR cname =
                   CASE
                       WHEN @CConcept_device = 15000 THEN 'time_window'
                    END
        )
    OPEN params_cursor;
    FETCH NEXT FROM params_cursor INTO @CUUID1, @CName, @CText1;
    WHILE @@FETCH_STATUS = 0
        BEGIN
            -- print @CName;
            IF @CName = 'address' OR @CName = 'version' OR @CName = 'd_index' OR @CName = 'contactId_zone'
                BEGIN
                    SET @CUUID2 = (SELECT dde_conceptx.cuuid FROM dde_conceptx WHERE cconcept = 2000 AND cname = 'int');
                    --print @CUUID2;
                END
            IF @CName = 'name' OR @CName = 'description'
                BEGIN
                    SET @CUUID2 = (SELECT dde_conceptx.cuuid FROM dde_conceptx WHERE cconcept = 2000 AND cname = 'nvarchar');
                END
            IF @CName = 'priority'
                BEGIN
                    SET @CUUID2 = (SELECT dde_conceptx.cuuid FROM dde_conceptx WHERE cconcept = 2000 AND cname = 'nvarchar');
                    SET @CUUID3 = (SELECT dde_conceptx.cuuid FROM dde_conceptx WHERE cconcept = 3500 AND cname = 'По умолчанию');
                END
           -- ELSE
            -- print @CText1;
           -- IF (SELECT count(dde_SetX.SUUID) FROM dde_SetX WHERE SConcept = 2000400 AND  SOwner = @CUUID_device_owner) <= 0
            IF(@insertable = 1)
                INSERT INTO dde_setx (suuid, sconcept, sowner, sname, suuid1, SUUID2, SUUID3, SInt1, SText1)
                    VALUES (NEWID(), @SConcept_DevicesParams_sets, @CUUID_device_owner, @CName, @CUUID1, @CUUID2, @CUUID3, NULL, @CText1);
            SET @CUUID3 = NULL;
            FETCH NEXT FROM params_cursor INTO @CUUID1, @CName, @CText1;
        END
    close params_cursor;
    DEALLOCATE params_cursor;

    /* TODO: Сгенерировать набор входов для приборов различных по типу; разные типы дефолтных входов ("выходное напряжение", "охранный" etc) */
    -- входы приборов пока берем из первичной(-ых) таблицы
    DECLARE @EName nvarchar(MAX);
    DECLARE @DName nvarchar(MAX);
    DECLARE @DVersion int;
    DECLARE enters_cursor cursor FOR SELECT EName, DName, DVersion FROM export_enters WHERE DName = @CDeviceName;
        OPEN enters_cursor;
        FETCH NEXT FROM enters_cursor INTO @EName, @DName, @DVersion;
        WHILE @@FETCH_STATUS = 0
            BEGIN
                SET @CUUID1 = (SELECT cuuid FROM dde_conceptx WHERE cconcept = 3600 AND cname = @EName);
                IF(@insertable = 1)
                    INSERT INTO dde_setx (suuid, sconcept, sowner, sname, suuid1, SUUID2, SUUID3, SInt1, SText1)
                            VALUES (NEWID(), 20000100, @CUUID_device_owner, @EName, @CUUID1, NULL, NULL, NULL, NULL);
            FETCH NEXT FROM enters_cursor INTO @EName, @DName, @DVersion;
            END
    close enters_cursor;
    DEALLOCATE enters_cursor;


     /* TODO: Сгенерировать набор выходов */

    DECLARE @RName nvarchar(MAX);
    DECLARE @RDName nvarchar(MAX);
    DECLARE @RDVersion int;
    DECLARE enters_cursor cursor FOR SELECT RName, DName, DVersion FROM export_relays WHERE DName = @CDeviceName;
        OPEN enters_cursor;
        FETCH NEXT FROM enters_cursor INTO @RName, @RDName, @RDVersion;
        WHILE @@FETCH_STATUS = 0
            BEGIN
                SET @CUUID1 = (SELECT cuuid FROM dde_conceptx WHERE cconcept = 3700 AND cname = @RName);
                IF(@insertable = 1)
                    INSERT INTO dde_setx (suuid, sconcept, sowner, sname, suuid1, SUUID2, SUUID3, SInt1, SText1)
                            VALUES (NEWID(), 20000200, @CUUID_device_owner, @RName, @CUUID1, NULL, NULL, NULL, NULL);
            FETCH NEXT FROM enters_cursor INTO @RName, @RDName, @RDVersion;
            END
    close enters_cursor;
    DEALLOCATE enters_cursor;

    /* TODO: Сгенерировать набор считывателей */

    DECLARE @RrName nvarchar(MAX);
    DECLARE @RrDName nvarchar(MAX);
    DECLARE @RrDVersion int;
    DECLARE enters_cursor cursor FOR SELECT RName, DName, DVersion FROM export_readers WHERE DName = @CDeviceName;
        OPEN enters_cursor;
        FETCH NEXT FROM enters_cursor INTO @RrName, @RrDName, @RrDVersion;
        WHILE @@FETCH_STATUS = 0
            BEGIN
                SET @CUUID1 = (SELECT cuuid FROM dde_conceptx WHERE cconcept = 3800 AND cname = @RName);
                IF(@insertable = 1)
                    INSERT INTO dde_setx (suuid, sconcept, sowner, sname, suuid1, SUUID2, SUUID3, SInt1, SText1)
                            VALUES (NEWID(), 20000300, @CUUID_device_owner, @RrName, @CUUID1, NULL, NULL, NULL, NULL);
            FETCH NEXT FROM enters_cursor INTO @RrName, @RrDName, @RrDVersion;
            END
    close enters_cursor;
    DEALLOCATE enters_cursor;

    /* ГЕНЕРАЦИЯ НАБОРОВ СОБЫТИЙ ПРИБОРОВ */
    DECLARE @EvName nvarchar(MAX);
    DECLARE @EvDName nvarchar(MAX);
    DECLARE @EvDVersion int;
    DECLARE enters_cursor cursor FOR SELECT EventName, DName, DVersion FROM export_devices_events WHERE DName = @CDeviceName;
        OPEN enters_cursor;
        FETCH NEXT FROM enters_cursor INTO @EvName, @EvDName, @EvDVersion;
        WHILE @@FETCH_STATUS = 0
            BEGIN
                SET @CUUID1 = (SELECT cuuid FROM dde_conceptx WHERE cconcept = 4000 AND cname = @EvName);
                IF(@insertable = 1)
                INSERT INTO dde_setx (suuid, sconcept, sowner, sname, suuid1, SUUID2, SUUID3, SInt1, SText1)
                        VALUES (NEWID(), @SConcept_EventsDevice_sets, @CUUID_device_owner, @EvName, @CUUID1, NULL, NULL, NULL, NULL);
            FETCH NEXT FROM enters_cursor INTO @EvName, @EvDName, @EvDVersion;
            END
    close enters_cursor;
    DEALLOCATE enters_cursor;

    -- print @CUUID_device_owner;
    FETCH NEXT FROM cuuid_cursor INTO @CUUID_device_owner, @CConcept_device, @CDeviceName;
   END;

IF((SELECT count(distinct sowner) FROM dde_setx WHERE sconcept = 20000400) < (SELECT count(cuuid) FROM dde_conceptx WHERE cconcept BETWEEN 5000 and 50000))
print 'Error compare counting devices! Please, check your data.'
CLOSE cuuid_cursor;
DEALLOCATE cuuid_cursor;


-- exec insert_exports export_enters_events, null, 20002100, '00000000-0000-0000-0000-000000003744' , 4000, 'EntEvName', 'EntrName', 'EntrVersion';
-- SELECT * FROM createSelectWithParams;
--SELECT EName, DName, DVersion FROM [export_enters] WHERE DName= 'Сигнал 20М (last)';
-- exec insert_exports 'dde_SetX';

-- CREATE FUNCTION createSelect()
-- returns TABLE
-- AS RETURN (
--         select * from export_enters
-- )
-- CREATE FUNCTION dbo.insert_export_events( )
-- returns TABLE
-- as
--     RETURN (
--         SELECT * FROM dde_ConceptX
--         )
-- go

-- CREATE  PROCEDURE createSelectWithParams
--     @sqlString nvarchar(MAX)
--
--     as
--     BEGIN
--         EXEC sp_executesql @sqlString
--     end

--cheking some details
--SELECT count(distinct SOwner) FROM dde_SetX WHERE SConcept = 20000400
--SELECT count(CUUID) FROM dde_ConceptX WHERE CConcept BETWEEN 5000 and 50000
--SELECT distinct SOwner FROM dde_SetX WHERE SConcept = 20000400

/*
-- Query for select export enters, readers, relays information from OrionDB
-- Enters = 3
-- Relays = 9
-- Readers = 8

BEGIN
DECLARE @ElementITemType int;
SET @ElementITemType = 8;
SELECT
-- a.DeviceType,
rl.GIndex,
--DI.Name,
--rl.Name,
a.Name as enter
,t2.Name,
t2.DeviceVersion
--dTE.Name as device,

    FROM dTypesElement a
INNER JOIN DevItems DI on a.DeviceType = DI.GType
INNER JOIN RSLines rl ON DI.DeviceID = rl.GIndex
INNER JOIN (SELECT DeviceType, Name, DeviceVersion FROM dTypesElement WHERE ElementType = 4) t2 ON (t2.DeviceType) = rl.DeviceType
    AND t2.DeviceVersion = rl.DeviceVersion
    WHERE DI.ComputerID = 5
    AND a.ElementType = @ElementITemType-- id названий шлейфов в dTypesElement
    AND DI.ItemType = @ElementITemType  -- шлейф в DevItems
ORDER BY t2.Name, t2.DeviceVersion
END
*/

/*
-- Query for select export events from OrionDB
BEGIN
    -- ElementType:
    -- 2 - zone events
    -- 4 - device events
    -- 3 - enter types event
    -- 5 - camera types event
    -- 8 - reader types event
    -- 9 - relay types event
    -- 11 - _access_ zone types event
    -- 12 - door types event
    -- 14 - С2000Р-РМ(?) events
    -- 17 - group of zones events
    -- 25 - videosystem events
    -- 150 - keybox events
    -- 151 - keybox _case_ events
    -- 514 - channel of recognition

    DECLARE  @ElementType int = 8;

SELECT ev.Contents, dTE.Name, dTE.DeviceVersion FROM Events ev
INNER JOIN EventGroupCont evgc ON evgc.EventID = ev.Event
INNER JOIN dTypesElement dTE on evgc.EventGroupID = dTE.EventGroupID
WHERE dTE.ElementType = @ElementType
-- AND  dTE.Name like '%охранный%'
ORDER BY dTE.Name, dTE.DeviceVersion
--ORDER BY ev.Contents
END
*/


/*
    100	модификаций (записей в справочник прибора конкретного типа)
    1000	типов приборов

Концепты нумеруются через 100, у каждого концепта может быть 99 записей с аккуратными UUID
Концепты во всех таблицах сквозные, не повторяются
Концепты экземпляров = концептам типов + 30 000 000
от	до
 100    	 	 19,999,900    	справочники разные
 20,000,000    	 29,999,900    	наборы на справочниках
 30,000,000    	 39,999,900    	экземпляры
 40,000,000    	 49,999,900    	наборы на экземплярах
 50,000,000    	 59,999,900    	структуры деревьев
 60,000,000    	 99,999,900    	остальные концепты (дизайн формы справочника, метки полей,…)
 100,000,000    		концепты, создаваемые пользователями (или UUID ?)

 */