--
-- PostgreSQL database dump
--

-- Dumped from database version 11.1
-- Dumped by pg_dump version 11.2

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: orionconcept; Type: DATABASE; Schema: -; Owner: postgres
--

CREATE DATABASE orionconcept WITH TEMPLATE = template0 ENCODING = 'UTF8' LC_COLLATE = 'Russian_Russia.1251' LC_CTYPE = 'Russian_Russia.1251';


ALTER DATABASE orionconcept OWNER TO postgres;

\connect orionconcept

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: tablefunc; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS tablefunc WITH SCHEMA public;


--
-- Name: EXTENSION tablefunc; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION tablefunc IS 'functions that manipulate whole tables, including crosstab';


--
-- Name: uuid-ossp; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA public;


--
-- Name: EXTENSION "uuid-ossp"; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION "uuid-ossp" IS 'generate universally unique identifiers (UUIDs)';


--
-- Name: uuidlist; Type: TYPE; Schema: public; Owner: postgres
--

CREATE TYPE public.uuidlist AS (
	uuid1 uuid,
	uuid2 uuid,
	uuid3 uuid,
	uuid4 uuid,
	uuid5 uuid,
	uuid6 uuid,
	uuid7 uuid,
	uuid8 uuid,
	uuid9 uuid,
	uuid10 uuid
);


ALTER TYPE public.uuidlist OWNER TO postgres;

--
-- Name: uuidlisttemp; Type: TYPE; Schema: public; Owner: postgres
--

CREATE TYPE public.uuidlisttemp AS (
	link1 uuid,
	link2 uuid
);


ALTER TYPE public.uuidlisttemp OWNER TO postgres;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: ConceptX; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."ConceptX" (
    "GUID" uuid NOT NULL,
    "CPARENT" uuid,
    "CCONCEPT" bigint NOT NULL,
    "CPROP" integer NOT NULL,
    "CNAME" character varying(80) NOT NULL,
    "CUUID1" uuid,
    "CUUID3" uuid,
    "CUUID4" uuid,
    "CINT1" bigint,
    "CINT2" bigint,
    "CBITS1" bigint,
    "CBITS2" bigint,
    "CFLOAT1" double precision,
    "CFLOAT2" double precision,
    "CCODE" character varying(40),
    "CCHAR1" character varying(80),
    "CCHAR2" character varying(80),
    "CTXTBLOB" bytea,
    "CDATETIME1" timestamp with time zone,
    "CDATETIME2" time with time zone,
    "CACCESS" integer,
    "CDB" uuid,
    "CPACK" bigint,
    "COWNERDB" integer,
    "CAUTHOR" uuid,
    "CUSER" uuid,
    "CPIC" uuid,
    "Ð¡DATETIME" timestamp without time zone DEFAULT now() NOT NULL,
    "CUUID2" public.uuidlist,
    "Conf" jsonb,
    "ConfDevice" jsonb
);


ALTER TABLE public."ConceptX" OWNER TO postgres;

--
-- Name: ConfigX; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."ConfigX" (
    "CFGUID" uuid DEFAULT public.uuid_generate_v4() NOT NULL,
    "CFConcept" bigint,
    "CFName" character varying NOT NULL,
    "CFConceptExt" bigint,
    "CFCUUID1" uuid,
    "FieldName" text,
    "CFConf" jsonb,
    "CFEngName" character varying(2044),
    "CFIcon" bytea
);


ALTER TABLE public."ConfigX" OWNER TO postgres;

--
-- Name: ISetX; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."ISetX" (
    "ISUUID" uuid NOT NULL,
    "ISetName" text,
    "ISOWNER" uuid NOT NULL,
    "ISUUID1" uuid,
    "ISConcept" bigint,
    "ISUUD2" uuid
);


ALTER TABLE public."ISetX" OWNER TO postgres;

--
-- Name: InstanceX; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."InstanceX" (
    "IUUID" uuid NOT NULL,
    "IParent" uuid,
    "IName" text,
    "ICUID2" uuid,
    "ICUID3" uuid,
    "ICUID4" uuid,
    "IConcept" bigint,
    "IType" uuid,
    "IINT1" bigint,
    "IUUID1" uuid
);


ALTER TABLE public."InstanceX" OWNER TO postgres;

--
-- Name: SetX; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."SetX" (
    "GUID" uuid DEFAULT public.uuid_generate_v4() NOT NULL,
    "ConceptSetX" bigint,
    "SOWNER" uuid,
    "GUID1" uuid,
    "SNAME" character varying(2044),
    "SCONCEPT" bigint,
    "Bits1" bigint
);


ALTER TABLE public."SetX" OWNER TO postgres;

--
-- Name: TreeX; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."TreeX" (
    "TUUID" uuid NOT NULL,
    "TName" uuid NOT NULL
);


ALTER TABLE public."TreeX" OWNER TO postgres;

--
-- Name: ConceptX ConceptX_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."ConceptX"
    ADD CONSTRAINT "ConceptX_pkey" PRIMARY KEY ("GUID");


--
-- Name: ConfigX ConfigX_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."ConfigX"
    ADD CONSTRAINT "ConfigX_pkey" PRIMARY KEY ("CFGUID");


--
-- Name: SetX SetsX_GUID_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."SetX"
    ADD CONSTRAINT "SetsX_GUID_key" UNIQUE ("GUID");


--
-- Name: ISetX unique_ISetX_IUUID; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."ISetX"
    ADD CONSTRAINT "unique_ISetX_IUUID" UNIQUE ("ISUUID");


--
-- Name: InstanceX unique_ObjectX_GUID; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."InstanceX"
    ADD CONSTRAINT "unique_ObjectX_GUID" UNIQUE ("IUUID");


--
-- Name: TreeX unique_TreeX_TUUID; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."TreeX"
    ADD CONSTRAINT "unique_TreeX_TUUID" UNIQUE ("TUUID");


--
-- Name: index_Conf; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "index_Conf" ON public."ConfigX" USING btree ("CFConf");


--
-- PostgreSQL database dump complete
--

